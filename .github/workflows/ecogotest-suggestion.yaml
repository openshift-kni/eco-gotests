name: Open Issue in eco-gotests when a Issue is Closed

on:
  issues:
    types:
      - labeled

jobs:
  process-issue:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch Comments from Closed Issue
        id: fetch_comments
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SOURCE_REPO: ${{ github.repository }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          COMMENT=$(gh api repos/$SOURCE_REPO/issues/$ISSUE_NUMBER/comments --jq '.[] | select(.body | test("AI-generated test case description")) | .body')

          if [ -n "$COMMENT" ]; then
            echo "COMMENT_FOUND=true" >> $GITHUB_ENV
            echo "COMMENT_BODY<<EOF" >> $GITHUB_ENV
            echo "$COMMENT" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "COMMENT_FOUND=false" >> $GITHUB_ENV
          fi

      - name: Send output to AI model
        id: ai_request
        run: |
          #RESPONSE=$(curl -X POST "https://your-ai-model-api.com/process" \
          #  -H "Content-Type: application/json" \
          #  -d @output.txt)
          #echo "$RESPONSE" > ai_output.txt
          #echo "response=$RESPONSE" >> "$GITHUB_ENV"
          echo "response='testing comment while the REST is built'" >> "$GITHUB_ENV"

      - name: Post AI response as an issue comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ðŸ¤– **AI-generated eco-gotest**:
            ```
            ${{ env.response }}

            Prompt was: ${{ env.COMMENT_BODY }}
            ```

