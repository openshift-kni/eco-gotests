name: 'Eco-GoInfra Module Bump'
on:
  workflow_dispatch:
    inputs:
      branch:
        description: Branch to bump eco-goinfra on
        required: true
        default: main
        type: string
  workflow_call:
    inputs:
      branch:
        description: Branch to bump eco-goinfra on
        required: true
        default: main
        type: string
permissions:
  contents: read
jobs:
  main:
    name: Eco-goinfra module bump on ${{ inputs.branch }}

    permissions:
      contents: write  # for peter-evans/create-pull-request to create branch
      pull-requests: write  # for peter-evans/create-pull-request to create a PR

    outputs:
      pr-url: ${{ steps.create-pr.outputs.pull-request-url }}

    runs-on: ubuntu-latest
    env:
      SHELL: /bin/bash

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Set up Go 1.23
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.6

      - name: Run sync script
        run: |
          go get github.com/openshift-kni/eco-goinfra@${{ inputs.branch }} &&
          go mod tidy &&
          go mod vendor

      - name: Create PR
        id: create-pr
        uses: peter-evans/create-pull-request@67ccf781d68cd99b580ae25a5c18a1cc84ffff1f # v7.0.6
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_KEY }}
        with:
          commit-message: "deps: bump github.com/openshift-kni/eco-goinfra"
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          title: Bump eco-goinfra dependency on ${{ inputs.branch }}
          base: ${{ inputs.branch }}
          branch: eco-goinfra-bump
          delete-branch: true
          reviewers: achuzhoy,cdvultur,klaskosk,kononovn,trewest

  ci:
    needs: [main]
    # Only run the CI if the action created a PR to save time when the version
    # is already up-to-date.
    if: ${{ needs.main.result == 'success' && needs.main.outputs.pr-url }}
    
    uses: ./.github/workflows/makefile.yml
    with:
      branch: ${{ inputs.branch }}

  label:
    needs: [main, ci]
    # Only label the PR if the CI actually ran. This also handles the case when
    # a PR is not created.
    if: ${{ contains(fromJson('["success", "failure"]'), needs.ci.result) }}

    name: Label created PR

    permissions:
      pull-requests: write

    runs-on: ubuntu-latest

    steps:
      - name: Label PR based on CI result
        run: gh pr edit ${{ needs.main.outputs.pr-url }} --add-label ci/$CI_RESULT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI_RESULT: ${{ needs.ci.result == 'success' && 'success' || 'failure' }}
