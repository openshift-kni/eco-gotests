package tsparams

import (
	"github.com/openshift-kni/eco-gotests/tests/cnf/core/network/internal/netparam"
	"github.com/openshift-kni/k8sreporter"

	appsv1 "k8s.io/api/apps/v1"
	corev1 "k8s.io/api/core/v1"
	rbacv1 "k8s.io/api/rbac/v1"
)

var (
	// Labels for the test suite.
	Labels = append(netparam.Labels, LabelSuite)

	// ReporterNamespacesToDump tells to reporter from where to collect logs.
	ReporterNamespacesToDump = map[string]string{
		TestNamespace: "bfd-test",
	}

	// ReporterCRDsToDump List of CRDs to dump.
	ReporterCRDsToDump = []k8sreporter.CRData{
		{Cr: &corev1.PodList{}},
		{Cr: &corev1.ConfigMapList{}},
		{Cr: &appsv1.DaemonSetList{}},
		{Cr: &rbacv1.RoleList{}},
		{Cr: &rbacv1.RoleBindingList{}},
	}
)

// All the constants required for the BFD test setup.
const (
	// LabelSuite used for ginkgo test suite label.
	LabelSuite = "bfd"
	// WorkerConfigMapName defines name of the configmap used by FRR daemonset.
	WorkerConfigMapName = "frr-worker-nodes-config"
	// MasterConfigMapName defines name of the configmap used by FRR Pod on master Node.
	MasterConfigMapName = "frr-master-nodes-config"
	// RoleName defines the role name.
	RoleName = "frr-role"
	// AppName defines the app name of the FRR container.
	AppName = "frr"
	// MountPath used for the ConfigMap volumemount.
	MountPath = "/etc/frr"
	// PeerConfigTemplate used while defining bfd peer config.
	PeerConfigTemplate = " peer %s\n   no shutdown\n !\n"
	// MasterNodeFRRPodName defines the pod name for the master pod.
	MasterNodeFRRPodName = "frr-pod-master"
	// TestNamespace defines the namespace used for test suite.
	TestNamespace = "bfd-test"
	// DaemonsFile configuration to enable bfd daemon in FRR.
	DaemonsFile = `
	# This file tells the frr package which daemons to start.
    #
    # Sample configurations for these daemons can be found in
    # /usr/share/doc/frr/examples/.
    #
    # ATTENTION:
    #
    # When activating a daemon for the first time, a config file, even if it is
    # empty, has to be present *and* be owned by the user and group "frr", else
    # the daemon will not be started by /etc/init.d/frr. The permissions should
    # be u=rw,g=r,o=.
    # When using "vtysh" such a config file is also needed. It should be owned by
    # group "frrvty" and set to ug=rw,o= though. Check /etc/pam.d/frr, too.
    #
    # The watchfrr, zebra and staticd daemons are always started.
    #
    bgpd=no
    ospfd=no
    ospf6d=no
    ripd=no
    ripngd=no
    isisd=no
    pimd=no
    ldpd=no
    nhrpd=no
    eigrpd=no
    babeld=no
    sharpd=no
    pbrd=no
    bfdd=yes
    fabricd=no
    vrrpd=no
    pathd=no
    #
    # If this option is set the /etc/init.d/frr script automatically loads
    # the config via "vtysh -b" when the servers are started.
    # Check /etc/pam.d/frr if you intend to use "vtysh"!
    #
    vtysh_enable=yes
    zebra_options="  -A 127.0.0.1 -s 90000000"
    bgpd_options="   -A 127.0.0.1"
    ospfd_options="  -A 127.0.0.1"
    ospf6d_options=" -A ::1"
    ripd_options="   -A 127.0.0.1"
    ripngd_options=" -A ::1"
    isisd_options="  -A 127.0.0.1"
    pimd_options="   -A 127.0.0.1"
    ldpd_options="   -A 127.0.0.1"
    nhrpd_options="  -A 127.0.0.1"
    eigrpd_options=" -A 127.0.0.1"
    babeld_options=" -A 127.0.0.1"
    sharpd_options=" -A 127.0.0.1"
    pbrd_options="   -A 127.0.0.1"
    staticd_options="-A 127.0.0.1"
    bfdd_options="   -A 127.0.0.1"
    fabricd_options="-A 127.0.0.1"
    vrrpd_options="  -A 127.0.0.1"
    pathd_options="  -A 127.0.0.1"
    # configuration profile
    #
    #frr_profile="traditional"
    #frr_profile="datacenter"
    #
    # This is the maximum number of FD's that will be available.
    # Upon startup this is read by the control files and ulimit
    # is called.  Uncomment and use a reasonable value for your
    # setup if you are expecting a large number of peers in
    # say BGP.
    #MAX_FDS=1024
    # The list of daemons to watch is automatically generated by the init script.
    #watchfrr_options=""
    # To make watchfrr create/join the specified netns, use the following option:
    #watchfrr_options="--netns"
    # This only has an effect in /etc/frr/<somename>/daemons, and you need to
    # start FRR with "/usr/lib/frr/frrinit.sh start <somename>".
    # for debugging purposes, you can specify a "wrap" command to start instead
    # of starting the daemon directly, e.g. to use valgrind on ospfd:
    #   ospfd_wrap="/usr/bin/valgrind"
    # or you can use "all_wrap" for all daemons, e.g. to use perf record:
    #   all_wrap="/usr/bin/perf record --call-graph -"
    # the normal daemon command is added to this at the end.
	`
)
